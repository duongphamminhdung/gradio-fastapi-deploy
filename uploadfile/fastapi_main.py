
import numpy as np
from fastapi import FastAPI, Form, File, UploadFile, Response
from fastapi.responses import FileResponse

import io
from face2stk_rfb320 import detect
import cv2

app = FastAPI()
TOKEN = 'hehehe'

@app.get("/")
def read_root():
    return {"Hello": "World"}

@app.post(
    "/facerfb320",

    # Set what the media type will be in the autogenerated OpenAPI specification.
    # fastapi.tiangolo.com/advanced/additional-responses/#additional-media-types-for-the-main-response
    responses = {
        200: {
            "content": {"image/jpg": {}}
        }
    },

    # Prevent FastAPI from adding "application/json" as an additional
    # response media type in the autogenerated OpenAPI specification.
    # https://github.com/tiangolo/fastapi/issues/3258
    response_class=Response)
def upload(file: UploadFile = File(...)):
    try:
        contents = file.file.read()
        # with open(os.path.join('image', 'a.jpg'), 'wb') as f:
        #     f.write(contents)
        # import ipdb; ipdb.set_trace()
        img = np.asarray(bytearray(contents), dtype=np.uint8)
        # cv2.imwrite(os.path.join('image', 'a.jpg'), cv2.imdecode(img, cv2.IMREAD_UNCHANGED))
        img_detect = detect(cv2.imdecode(img, cv2.IMREAD_UNCHANGED))
        # cv2.imwrite('image/b.jpg', img_detect)
        # import ipdb; ipdb.set_trace()
        ret, image_bytes = cv2.imencode('.jpg', img_detect)
        # print(type(img_bytes))
    except Exception as e:
        print(e)
        return {"message": "There was an error uploading the file "}
    finally:
        file.file.close()

    # return {"message": f"Successfully uploaded {file.filename}"}
    return Response(content=image_bytes.tobytes(), media_type="image/jpg")